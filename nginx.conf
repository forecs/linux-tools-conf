
#user http;
worker_processes  1;

#error_log  logs/error.log;
#error_log  logs/error.log  notice;
#error_log  logs/error.log  info;

#pid        logs/nginx.pid;


events {
    worker_connections  1024;
}


http {
    include       mime.types;
    default_type  application/octet-stream;

    #log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
    #                  '$status $body_bytes_sent "$http_referer" '
    #                  '"$http_user_agent" "$http_x_forwarded_for"';

    #access_log  logs/access.log  main;

    sendfile        on;
    #tcp_nopush     on;

    #keepalive_timeout  0;
    keepalive_timeout  65;

    #gzip  on;

    server {
        listen       80;
        server_name  localhost alias arch6000;

        #charset koi8-r;

        #access_log  logs/host.access.log  main;
        location /{
	#@forecs, only allow local access
	allow 127.0.0.1;
	allow 192.168.168.108;
	allow 192.168.168.192;
	deny all;
            root   html;
            index  index.html index.htm index.php;
        }

	location /wordpress {
        # try_files $uri $uri/ /wordpress/index.php;
               
	allow 127.0.0.1;
	allow 192.168.168.108;
	allow 192.168.168.192;
	deny all;
    	# index index.html index.php;
        if (-f $request_filename/index.html){
            rewrite (.*) $1/wordpress/index.html break;
        }
        if (-f $request_filename/index.php){
            rewrite (.*) $1/wordpress/index.php;
        }
        if (!-f $request_filename){
            rewrite (.*) /wordpress/index.php;
        }   }
	# add by forecs for clear url
	location /drupal {

	allow 127.0.0.1;
	allow 192.168.168.108;
	allow 192.168.168.192;
	deny all;
	    index index.html index.htm index.php;
	    try_files $uri @rewrite;
	}
	location @rewrite {
	    # Drupal in root directory
      	    # rewrite ^(.*)$ /index.php?q=$1 last;
            # Drupal in a subdirectory
            rewrite ^/([^/]*)/(.*)(/?)$ /$1/index.php?q=$2&$args;
	}



        #error_page  404              /404.html;

        # redirect server error pages to the static page /50x.html
        #
        error_page   500 502 503 504  /50x.html;
        location = /50x.html {
            root   html;
        }

        # proxy the PHP scripts to Apache listening on 127.0.0.1:80
        #
        #location ~ \.php$ {
        #    proxy_pass   http://127.0.0.1;
        #}

        # pass the PHP scripts to FastCGI server listening on 127.0.0.1:9000
        #
        location ~ \.php$ {
	    try_files $uri = 404;
            root           html;
            fastcgi_pass   unix:/var/run/php-fpm/php-fpm.sock;
            fastcgi_index  index.php;
            fastcgi_param  SCRIPT_FILENAME  $document_root$fastcgi_script_name;
            include        fastcgi_params;
        }

        # deny access to .htaccess files, if Apache's document root
        # concurs with nginx's one
        #
        #location ~ /\.ht {
        #    deny  all;
        #}
    }


    # another virtual host using mix of IP-, name-, and port-based configuration
    #
    #server {
    #    listen       8000;
    #    listen       somename:8080;
    #    server_name  somename  alias  another.alias;

    #    location / {
    #        root   html;
    #        index  index.html index.htm;
    #    }
    #}

}
